[{"/Users/Will/Documents/GitHub/fake-baseball-scouting-page/src/reportWebVitals.ts":"1","/Users/Will/Documents/GitHub/fake-baseball-scouting-page/src/index.tsx":"2","/Users/Will/Documents/GitHub/fake-baseball-scouting-page/src/components/app/App.tsx":"3","/Users/Will/Documents/GitHub/fake-baseball-scouting-page/src/components/routes/Routes.tsx":"4","/Users/Will/Documents/GitHub/fake-baseball-scouting-page/src/components/pages/playerPage/playerPage.tsx":"5","/Users/Will/Documents/GitHub/fake-baseball-scouting-page/src/components/pages/gamePage/gamePage.tsx":"6","/Users/Will/Documents/GitHub/fake-baseball-scouting-page/src/hooks/useGetGameLog/useGetGameLog.tsx":"7","/Users/Will/Documents/GitHub/fake-baseball-scouting-page/src/hooks/useMLRApi/useMLRApi.tsx":"8","/Users/Will/Documents/GitHub/fake-baseball-scouting-page/src/hooks/useGetGames/useGetGames.tsx":"9"},{"size":425,"mtime":1612039936312,"results":"10","hashOfConfig":"11"},{"size":234,"mtime":1612133600053,"results":"12","hashOfConfig":"11"},{"size":222,"mtime":1612125866927,"results":"13","hashOfConfig":"11"},{"size":874,"mtime":1612125947170,"results":"14","hashOfConfig":"11"},{"size":91,"mtime":1612124852641,"results":"15","hashOfConfig":"11"},{"size":2264,"mtime":1612141948449,"results":"16","hashOfConfig":"11"},{"size":725,"mtime":1612140796625,"results":"17","hashOfConfig":"11"},{"size":163,"mtime":1612133387770,"results":"18","hashOfConfig":"11"},{"size":816,"mtime":1612141169839,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1t8tlpw",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"25"},"/Users/Will/Documents/GitHub/fake-baseball-scouting-page/src/reportWebVitals.ts",[],["41","42"],"/Users/Will/Documents/GitHub/fake-baseball-scouting-page/src/index.tsx",[],["43","44"],"/Users/Will/Documents/GitHub/fake-baseball-scouting-page/src/components/app/App.tsx",[],"/Users/Will/Documents/GitHub/fake-baseball-scouting-page/src/components/routes/Routes.tsx",[],"/Users/Will/Documents/GitHub/fake-baseball-scouting-page/src/components/pages/playerPage/playerPage.tsx",[],"/Users/Will/Documents/GitHub/fake-baseball-scouting-page/src/components/pages/gamePage/gamePage.tsx",[],"/Users/Will/Documents/GitHub/fake-baseball-scouting-page/src/hooks/useGetGameLog/useGetGameLog.tsx",[],"/Users/Will/Documents/GitHub/fake-baseball-scouting-page/src/hooks/useMLRApi/useMLRApi.tsx",[],"/Users/Will/Documents/GitHub/fake-baseball-scouting-page/src/hooks/useGetGames/useGetGames.tsx",["45"],"import { useCallback, useState } from \"react\";\nimport { Game } from \"../../interfaces/game\";\nimport { Play } from \"../../interfaces/play\";\nimport { useMLRApi } from \"../useMLRApi/useMLRApi\";\n\nexport const useGetGames = (): [\n  Game[] | undefined,\n  boolean,\n  any,\n  (season: number, session: number) => Promise<Game[]>\n] => {\n  const [games, setGames] = useState<Game[]>();\n  const { get, response, loading, error } = useMLRApi<Game[]>();\n\n  const fetchGameLog = useCallback(\n    async (season: number, session: number) => {\n      const fetchedGameLog = (await get(\n        `games/${season}/${session}`\n      )) as Game[];\n\n      if (response.ok) {\n        setGames(fetchedGameLog);\n      }\n\n      return fetchedGameLog;\n    },\n    [get, setGames, response]\n  );\n\n  return [games, loading, error, fetchGameLog];\n};\n",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"50"},{"ruleId":"48","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":3,"column":10,"nodeType":"54","messageId":"55","endLine":3,"endColumn":14},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],["56"],["57"],"@typescript-eslint/no-unused-vars","'Play' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]