{"version":3,"sources":["context/LeagueToggleContext/leagueToggleContext.tsx","hooks/useRedditBallApi/useRedditBallApi.tsx","components/playTable/playTable.tsx","components/lineGraph/lineGraph.tsx","data/teamsMaps.ts","components/pages/gamePage/gamePage.tsx","hooks/useGetGameLog/useGetGameLog.tsx","hooks/useGetGames/useGetGames.tsx","hooks/useGetActiveGame/useGetActiveGame.tsx","components/heatMap/heatMap.tsx","components/pages/playerPage/playerPage.tsx","hooks/useGetPlayerStats/useGetPlayerStats.tsx","hooks/useGetPlaysByPlayer/useGetPlaysByPlayer.tsx","components/routes/Routes.tsx","components/app/App.tsx","index.tsx"],"names":["LeagueToggleContext","React","createContext","currentLeague","setCurrentLeague","LeagueToggleContextProvider","props","useState","Provider","value","useLeagueToggleContext","context","useContext","Error","useRedditBallApi","apiVerson","useFetch","PlayTable","plays","data","useMemo","inningsMap","reduce","acc","p","beforeState","inning","push","id","pitcher","batter","pitch","swing","diff","result","score","afterState","awayScore","homeScore","inningTableColumns","Object","entries","forEach","index","children","LinkCell","rowData","dataKey","player","playType","Table","Cell","to","firstName","lastName","isTree","defaultExpandAllRows","rowKey","Column","flexGrow","HeaderCell","LineGraph","console","log","options","chart","zoom","enabled","redrawOnParentResize","xaxis","categories","Array","length","keys","map","x","markers","size","showNullDataPoints","stroke","width","dashArray","yaxis","min","max","series","name","type","play","currentPlay","delta","Math","abs","height","mlrTeamsMap","ARI","BOS","CHC","CIN","COL","DET","HOU","KCR","TEX","LAD","MIA","MIL","ATL","NYM","NYY","OAK","PHI","PIT","SDP","SFG","STL","TBR","TOR","CLE","BAL","SEA","CWS","MIN","MTL","LAA","milrTeamsMap","LMN","SAR","PHB","POR","WWC","LID","MVS","SLT","CWJ","BAC","SAS","FRG","SUP","PBA","CBC","TTT","RBD","TAK","BBB","JEF","MPD","AAL","MBT","PUK","CIM","SGP","HEL","LIM","GamePage","selectedTab","setSelectedTab","selectedSeason","setSelectedSeason","selectedSession","setSelectedSession","selectedGame","setSelectedGame","selectedActiveTeam","setSelectedActiveTeam","selectedTeamsMap","setSelectedTeamsMap","gameLog","setGameLog","get","response","loading","error","useCallback","gameId","a","fetchedGameLog","ok","useGetGameLog","loadingGameLogs","fetchGameLog","games","setGames","season","session","useGetGames","loadingGames","fetchGames","activeGame","setActiveGame","teamTag","fetchedActiveGame","useGetActiveGame","loadingActiveGame","fetchActiveGame","useEffect","fetchGamesWrapper","undefined","game","Container","style","Header","FlexboxGrid","justify","padding","align","Item","Toggle","checked","onChange","checkedChildren","unCheckedChildren","marginLeft","colspan","label","styles","menuPortal","base","zIndex","menuPortalTarget","document","body","team","sort","tag","marginRight","s","isLoading","awayTeam","homeTeam","g","Content","Loader","textAlign","gameInfo","completed","outs","firstOccupied","secondOccupied","thirdOccupied","getGameInfo","Nav","appearance","activeKey","onSelect","e","eventKey","filter","reverse","HeatMap","y","dataLabels","colors","title","text","PlayerPage","useParams","playerId","useGetPlayerStats","fetchPlayerStats","setPlays","fetchedPlays","useGetPlaysByPlayer","loadingPlays","fetchPlaysByPlayer","history","useHistory","replace","Routes","basename","exact","from","path","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.af9caa8b.chunk.js","sourcesContent":["import React, { useState, ProviderProps } from \"react\";\n\nexport interface LeagueToggleContextProps {\n  currentLeague: \"mlr\" | \"milr\";\n  setCurrentLeague: React.Dispatch<React.SetStateAction<\"mlr\" | \"milr\">>;\n}\n\ninterface LeagueToggleContextProviderProps\n  extends Omit<ProviderProps<LeagueToggleContextProps>, \"value\"> {}\n\nexport const LeagueToggleContext = React.createContext<\n  LeagueToggleContextProps\n>({\n  currentLeague: \"mlr\",\n  setCurrentLeague: () => {}\n});\n\nexport const LeagueToggleContextProvider = (\n  props: LeagueToggleContextProviderProps\n) => {\n  const [currentLeague, setCurrentLeague] = useState<\"mlr\" | \"milr\">(\"mlr\");\n\n  return (\n    <LeagueToggleContext.Provider\n      value={{ currentLeague, setCurrentLeague }}\n      {...props}\n    />\n  );\n};\n\nexport const useLeagueToggleContext = () => {\n  const context = React.useContext(LeagueToggleContext);\n  if (context == null) {\n    throw new Error(\"LeagueToggleContext must be used inside provider\");\n  }\n  return context;\n};\n","import useFetch from \"use-http\";\nimport { useLeagueToggleContext } from \"../../context/LeagueToggleContext/leagueToggleContext\";\n\nexport const useRedditBallApi = <T,>(apiVerson: string = \"v1\") => {\n  const { currentLeague } = useLeagueToggleContext();\n\n  return useFetch<T>(\n    `https://${\n      currentLeague === \"milr\" ? currentLeague + \".\" : \"\"\n    }redditball.com/api/${apiVerson}`\n  );\n};\n","import React from \"react\";\nimport { Play } from \"../../interfaces/play\";\nimport { Table, TableCellProps } from \"rsuite\";\nimport { Link } from \"react-router-dom\";\nimport { Player } from \"../../interfaces/player\";\n\ninterface TableColumn {\n  id: number;\n  pitcher: Player;\n  batter: Player;\n  pitch: number;\n  swing: number;\n  diff: number;\n  result: string;\n  score: string;\n}\n\ninterface PlayTableProps {\n  plays: Play[];\n}\n\nexport const PlayTable = (props: PlayTableProps) => {\n  const { plays } = props;\n\n  const data = React.useMemo(() => {\n    const inningsMap = plays.reduce(\n      (acc: { [inning: string]: TableColumn[] }, p: Play) => {\n        if (!acc[p.beforeState.inning]) {\n          acc[p.beforeState.inning] = [];\n        }\n\n        acc[p.beforeState.inning].push({\n          id: p.id,\n          pitcher: p.pitcher,\n          batter: p.batter,\n          pitch: p.pitch,\n          swing: p.swing,\n          diff: p.diff,\n          result: p.result,\n          score: p.afterState.awayScore + \"-\" + p.afterState.homeScore\n        });\n\n        return acc;\n      },\n      {}\n    );\n\n    const inningTableColumns: any[] = [];\n    Object.entries(inningsMap).forEach(([inning, plays], index) => {\n      inningTableColumns.push({\n        id: index,\n        inning: inning,\n        children: plays\n      });\n    });\n\n    return inningTableColumns;\n  }, [plays]);\n\n  const LinkCell = (props: TableCellProps) => {\n    const { rowData, dataKey } = props;\n\n    const player = (rowData as TableColumn)[\n      dataKey as keyof TableColumn\n    ] as Player;\n\n    const playType = dataKey === \"pitcher\" ? \"pitching\" : \"batting\";\n\n    if (player) {\n      return (\n        <Table.Cell {...props}>\n          <Link to={`/player/${player.id}/${playType}`}>\n            {player.firstName + \" \" + player.lastName}\n          </Link>\n        </Table.Cell>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <div>\n      <Table isTree defaultExpandAllRows rowKey=\"id\" data={data}>\n        <Table.Column flexGrow={1}>\n          <Table.HeaderCell>Inning</Table.HeaderCell>\n          <Table.Cell dataKey=\"inning\" />\n        </Table.Column>\n\n        <Table.Column flexGrow={1}>\n          <Table.HeaderCell>Pitcher</Table.HeaderCell>\n          <LinkCell dataKey=\"pitcher\" />\n        </Table.Column>\n\n        <Table.Column flexGrow={1}>\n          <Table.HeaderCell>Batter</Table.HeaderCell>\n          <LinkCell dataKey=\"batter\" />\n        </Table.Column>\n\n        <Table.Column flexGrow={1}>\n          <Table.HeaderCell>Pitch</Table.HeaderCell>\n          <Table.Cell dataKey=\"pitch\" />\n        </Table.Column>\n\n        <Table.Column flexGrow={1}>\n          <Table.HeaderCell>Swing</Table.HeaderCell>\n          <Table.Cell dataKey=\"swing\" />\n        </Table.Column>\n\n        <Table.Column flexGrow={1}>\n          <Table.HeaderCell>Diff</Table.HeaderCell>\n          <Table.Cell dataKey=\"diff\" />\n        </Table.Column>\n\n        <Table.Column flexGrow={1}>\n          <Table.HeaderCell>Result</Table.HeaderCell>\n          <Table.Cell dataKey=\"result\" />\n        </Table.Column>\n\n        <Table.Column flexGrow={1}>\n          <Table.HeaderCell>Score</Table.HeaderCell>\n          <Table.Cell dataKey=\"score\" />\n        </Table.Column>\n      </Table>\n    </div>\n  );\n};\n","import { useMemo } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { Play } from \"../../interfaces/play\";\n\ninterface LineGraphProps {\n  plays: Play[];\n}\n\nexport const LineGraph = (props: LineGraphProps) => {\n  const { plays } = props;\n  console.log(plays);\n  const options = useMemo(\n    () => ({\n      chart: {\n        id: \"line\",\n        zoom: {\n          enabled: false\n        },\n        redrawOnParentResize: false\n      },\n      xaxis: {\n        categories: [...Array(plays.length).keys()].map(x => ++x)\n      },\n      markers: {\n        size: 5,\n        showNullDataPoints: false\n      },\n      stroke: { width: [7, 2, 5], dashArray: [0, 3, 0] },\n      yaxis: {\n        min: 0,\n        max: 1000\n      }\n    }),\n    [plays]\n  );\n\n  const series = useMemo(\n    () => [\n      {\n        name: \"Pitch\",\n        type: \"line\",\n        data: plays.map((play: Play) => play.pitch)\n      },\n      {\n        name: \"Swing\",\n        type: \"line\",\n        data: plays.map((play: Play) => play.swing)\n      },\n      {\n        name: \"Delta\",\n        type: \"column\",\n        data: plays.map((currentPlay: Play, index: number, plays: Play[]) => {\n          if (\n            index > 0 &&\n            plays[index - 1] &&\n            currentPlay.pitch &&\n            currentPlay.swing\n          ) {\n            let delta = Math.abs(currentPlay.pitch - plays[index - 1].pitch);\n\n            return delta > 500 ? 1000 - delta : delta;\n          } else {\n            return null;\n          }\n        })\n      }\n    ],\n    [plays]\n  );\n\n  return (\n    <ReactApexChart\n      options={options}\n      series={series}\n      type=\"line\"\n      height=\"100%\"\n    />\n  );\n};\n","export const mlrTeamsMap: { [tag: string]: string } = {\n  ARI: \"Arizona Diamondbacks\",\n  BOS: \"Boston Red Sox\",\n  CHC: \"Chicago Cubs\",\n  CIN: \"Cincinnati Reds\",\n  COL: \"Colorado Rockies\",\n  DET: \"Detroit Tigers\",\n  HOU: \"Houston Colt 45's\",\n  KCR: \"Kansas City Royals\",\n  TEX: \"Texas Rangers\",\n  LAD: \"Los Angeles Dodgers\",\n  MIA: \"Miami Marlins\",\n  MIL: \"Milwaukee Brewers\",\n  ATL: \"Atlanta Braves\",\n  NYM: \"New York Mets\",\n  NYY: \"New York Yankees\",\n  OAK: \"Oakland Athletics\",\n  PHI: \"Philadelphia Phillies\",\n  PIT: \"Pittsburgh Pirates\",\n  SDP: \"San Diego Padres\",\n  SFG: \"San Francisco Giants\",\n  STL: \"St. Louis Cardinals\",\n  TBR: \"Tampa Bay Rays\",\n  TOR: \"Toronto Blue Jays\",\n  CLE: \"Cleveland Guardians\",\n  BAL: \"Baltimore Orioles\",\n  SEA: \"Seattle Mariners\",\n  CWS: \"Chicago White Sox\",\n  MIN: \"Minnesota Twins\",\n  MTL: \"Montreal Expos\",\n  LAA: \"Los Angeles Angels\"\n};\n\nexport const milrTeamsMap: { [tag: string]: string } = {\n  LMN: \"Lemon Lake Lemons\",\n  SAR: \"Sarasota Savages\",\n  PHB: \"Philadelphia B's\",\n  POR: \"Portland Roses\",\n  WWC: \"Waukesha White Claws\",\n  LID: \"Long Island Ducks\",\n  MVS: \"Martha's Vineyard Sandpipers\",\n  SLT: \"South Side L Train\",\n  CWJ: \"Caulfield Walls of Jericho\",\n  BAC: \"Blue Grass Ax Cats\",\n  SAS: \"Saskatoon Saloons\",\n  FRG: \"Fargo Woodchippers\",\n  SUP: \"Surprise, Pitches\",\n  PBA: \"Pensacola Blue Angels\",\n  CBC: \"Congo Bongocats\",\n  TTT: \"Tallahassee Toxic Tyrants\",\n  RBD: \"Rookie Bat Dogs\",\n  TAK: \"Talladega Knights\",\n  BBB: \"Bronzeville Birthday Boys\",\n  JEF: \"Jefferson Jeffies\",\n  MPD: \"Merseburg Pulse Demons\",\n  AAL: \"Allegheny Alcoholics\",\n  MBT: \"Missouri Baseball Team\",\n  PUK: \"Amherst Pukwudgies\",\n  CIM: \"Cohen's Island Malamutes\",\n  SGP: \"Singapore Slingers\",\n  HEL: \"Helena Handbaskets\",\n  LIM: \"Limerick Limes\"\n};\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport { useGetGameLog } from \"../../../hooks/useGetGameLog/useGetGameLog\";\nimport Select from \"react-select\";\nimport { useGetGames } from \"../../../hooks/useGetGames/useGetGames\";\nimport { Game } from \"../../../interfaces/game\";\nimport { PlayTable } from \"../../playTable/playTable\";\nimport { Play } from \"../../../interfaces/play\";\nimport { LineGraph } from \"../../lineGraph/lineGraph\";\nimport {\n  Container,\n  Content,\n  FlexboxGrid,\n  Header,\n  Loader,\n  Nav,\n  Toggle\n} from \"rsuite\";\nimport { useLeagueToggleContext } from \"../../../context/LeagueToggleContext/leagueToggleContext\";\nimport { mlrTeamsMap, milrTeamsMap } from \"../../../data/teamsMaps\";\nimport { useGetActiveGame } from \"../../../hooks/useGetActiveGame/useGetActiveGame\";\n\nexport const GamePage: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [selectedSeason, setSelectedSeason] = useState(6);\n  const [selectedSession, setSelectedSession] = useState(1);\n  const [selectedGame, setSelectedGame] = useState<Game>();\n  const [selectedActiveTeam, setSelectedActiveTeam] = useState<string>();\n  const [selectedTeamsMap, setSelectedTeamsMap] = useState(mlrTeamsMap);\n\n  const [gameLog, loadingGameLogs, , fetchGameLog] = useGetGameLog();\n  const [games, loadingGames, , fetchGames] = useGetGames();\n  const [activeGame, loadingActiveGame, , fetchActiveGame] = useGetActiveGame();\n\n  const { currentLeague, setCurrentLeague } = useLeagueToggleContext();\n\n  useEffect(() => {\n    const fetchGamesWrapper = async () => {\n      await fetchGames(selectedSeason, selectedSession);\n    };\n    fetchGamesWrapper();\n\n    setSelectedGame(undefined);\n  }, [selectedSeason, selectedSession, fetchGames]);\n\n  useEffect(() => {\n    if (selectedGame) {\n      fetchGameLog(selectedGame.id);\n\n      setSelectedActiveTeam(undefined);\n    }\n  }, [selectedGame, fetchGameLog]);\n\n  useEffect(() => {\n    if (selectedActiveTeam) {\n      fetchActiveGame(selectedActiveTeam);\n\n      setSelectedGame(undefined);\n    }\n  }, [selectedActiveTeam, fetchActiveGame]);\n\n  useEffect(() => {\n    if (activeGame) {\n      fetchGameLog(activeGame.id);\n    }\n  }, [activeGame, fetchGameLog]);\n\n  useEffect(() => {\n    setSelectedGame(undefined);\n    setSelectedActiveTeam(undefined);\n    setSelectedTeamsMap(currentLeague === \"milr\" ? milrTeamsMap : mlrTeamsMap);\n  }, [currentLeague]);\n\n  const game = useMemo(() => {\n    return selectedGame\n      ? selectedGame\n      : activeGame && selectedActiveTeam\n      ? activeGame\n      : undefined;\n  }, [selectedGame, activeGame, selectedActiveTeam]);\n\n  const getManOnState = () => {\n    if (game?.firstOccupied && !game?.secondOccupied && !game?.thirdOccupied) {\n      return \", Man on first\";\n    } else if (\n      !game?.firstOccupied &&\n      game?.secondOccupied &&\n      !game?.thirdOccupied\n    ) {\n      return \", Man on second\";\n    } else if (\n      !game?.firstOccupied &&\n      !game?.secondOccupied &&\n      game?.thirdOccupied\n    ) {\n      return \", Man on third\";\n    } else if (\n      game?.firstOccupied &&\n      game?.secondOccupied &&\n      !game?.thirdOccupied\n    ) {\n      return \", Men on first and second\";\n    } else if (\n      game?.firstOccupied &&\n      !game?.secondOccupied &&\n      game?.thirdOccupied\n    ) {\n      return \", Men on first and third\";\n    } else if (\n      !game?.firstOccupied &&\n      game?.secondOccupied &&\n      game?.thirdOccupied\n    ) {\n      return \", Men of second and third\";\n    } else if (\n      game?.firstOccupied &&\n      game?.secondOccupied &&\n      game?.thirdOccupied\n    ) {\n      return \", Bases loaded\";\n    }\n\n    return \"\";\n  };\n\n  const getGameInfo = () => {\n    let gameInfo = `${game?.awayScore} - ${game?.homeScore}`;\n    if (!game?.completed) {\n      gameInfo = `${gameInfo} | ${game?.inning} ${\n        game?.outs\n      } outs ${getManOnState()}`;\n    }\n\n    return gameInfo;\n  };\n\n  return (\n    <Container style={{ height: \"100%\" }}>\n      <Header>\n        <FlexboxGrid justify=\"space-between\" style={{ padding: 4 }}>\n          <FlexboxGrid align=\"middle\" justify=\"start\" style={{ width: \"50%\" }}>\n            <FlexboxGrid.Item>\n              <Toggle\n                size=\"md\"\n                checked={currentLeague === \"milr\"}\n                onChange={(checked: boolean) => {\n                  console.log(\"checked\", checked);\n                  setCurrentLeague(checked ? \"milr\" : \"mlr\");\n                }}\n                checkedChildren=\"MiLR\"\n                unCheckedChildren=\"MiLR\"\n              />\n            </FlexboxGrid.Item>\n\n            <FlexboxGrid.Item style={{ marginLeft: 8 }} colspan={8}>\n              <Select\n                value={{\n                  label:\n                    selectedActiveTeam && selectedTeamsMap[selectedActiveTeam]\n                      ? selectedTeamsMap[selectedActiveTeam]\n                      : \"Select active game for...\",\n                  value: selectedActiveTeam ? selectedActiveTeam : \"\"\n                }}\n                styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n                menuPortalTarget={document.body}\n                onChange={(team: any) => {\n                  setSelectedActiveTeam(team.value);\n                }}\n                options={\n                  Object.entries(selectedTeamsMap)\n                    .sort()\n                    .map(([tag, teamName]) => ({\n                      label: teamName,\n                      value: tag\n                    })) as any\n                }\n              />\n            </FlexboxGrid.Item>\n          </FlexboxGrid>\n\n          <FlexboxGrid justify=\"end\" style={{ width: \"50%\" }}>\n            <FlexboxGrid.Item colspan={3} style={{ marginRight: 4 }}>\n              <Select\n                value={{ label: selectedSeason, value: selectedSeason }}\n                styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n                menuPortalTarget={document.body}\n                onChange={(season: any) => {\n                  setSelectedSeason(season.value);\n                }}\n                options={[...Array(6).keys()]\n                  .map(x => ++x)\n                  .map(s => ({ label: s, value: s }))}\n              />\n            </FlexboxGrid.Item>\n\n            <FlexboxGrid.Item colspan={3} style={{ marginRight: 4 }}>\n              <Select\n                value={{ label: selectedSession, value: selectedSession }}\n                styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n                menuPortalTarget={document.body}\n                onChange={(season: any) => {\n                  setSelectedSession(season.value);\n                }}\n                options={[...Array(21).keys()]\n                  .map(x => ++x)\n                  .map(s => ({ label: s, value: s }))}\n              />\n            </FlexboxGrid.Item>\n\n            <FlexboxGrid.Item colspan={6}>\n              <Select\n                isLoading={loadingGames}\n                styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n                menuPortalTarget={document.body}\n                value={{\n                  label: selectedGame\n                    ? `${selectedGame.awayTeam.name} @ ${selectedGame.homeTeam.name}`\n                    : \"Pick game\",\n                  value: selectedGame\n                }}\n                onChange={(game: any) => {\n                  setSelectedGame(game.value);\n                }}\n                options={games?.map(g => ({\n                  label: `${g.awayTeam.name} @ ${g.homeTeam.name}`,\n                  value: g\n                }))}\n              />\n            </FlexboxGrid.Item>\n          </FlexboxGrid>\n        </FlexboxGrid>\n      </Header>\n\n      <Content style={{ height: \"100%\" }}>\n        <FlexboxGrid\n          justify=\"center\"\n          align=\"middle\"\n          style={{ height: \"100%\", width: \"100%\" }}\n        >\n          {loadingGameLogs || loadingActiveGame ? (\n            <Loader size=\"lg\" />\n          ) : game && gameLog ? (\n            <>\n              <FlexboxGrid.Item style={{ width: \"100%\", textAlign: \"center\" }}>\n                <h3>{`${game?.awayTeam.name} @ ${game?.homeTeam.name}`}</h3>\n                <h5>{`${getGameInfo()}`}</h5>\n              </FlexboxGrid.Item>\n\n              <FlexboxGrid.Item style={{ width: \"100%\" }}>\n                <Nav\n                  appearance={\"tabs\"}\n                  activeKey={selectedTab}\n                  onSelect={(e: any) => {\n                    setSelectedTab(e);\n                  }}\n                >\n                  <Nav.Item eventKey={0}>{game.awayTeam.name}</Nav.Item>\n                  <Nav.Item eventKey={1}>{game.homeTeam.name}</Nav.Item>\n                </Nav>\n              </FlexboxGrid.Item>\n\n              <FlexboxGrid.Item style={{ height: \"auto\", width: \"100%\" }}>\n                <PlayTable\n                  plays={gameLog\n                    .filter(\n                      (p: Play) =>\n                        p.beforeState.inning[0] ===\n                        (selectedTab === 0 ? \"B\" : \"T\")\n                    )\n                    .reverse()}\n                />\n                <LineGraph\n                  plays={gameLog\n                    .filter(\n                      (p: Play) =>\n                        p.beforeState.inning[0] ===\n                        (selectedTab === 0 ? \"B\" : \"T\")\n                    )\n                    .reverse()}\n                />\n              </FlexboxGrid.Item>\n            </>\n          ) : (\n            \"Select a game\"\n          )}\n        </FlexboxGrid>\n      </Content>\n    </Container>\n  );\n};\n","import { useCallback, useState } from \"react\";\nimport { Play } from \"../../interfaces/play\";\nimport { useRedditBallApi } from \"../useRedditBallApi/useRedditBallApi\";\n\nexport const useGetGameLog = (): [\n  Play[] | undefined,\n  boolean,\n  any,\n  (gameId: number) => Promise<Play[]>\n] => {\n  const [gameLog, setGameLog] = useState<Play[]>();\n  const { get, response, loading, error } = useRedditBallApi<Play[]>();\n\n  const fetchGameLog = useCallback(\n    async (gameId: number) => {\n      const fetchedGameLog = (await get(`games/${gameId}/log`)) as Play[];\n\n      if (response.ok) {\n        setGameLog(fetchedGameLog);\n      }\n\n      return fetchedGameLog;\n    },\n    [get, setGameLog, response]\n  );\n\n  return [gameLog, loading, error, fetchGameLog];\n};\n","import { useCallback, useState } from \"react\";\nimport { Game } from \"../../interfaces/game\";\nimport { useRedditBallApi } from \"../useRedditBallApi/useRedditBallApi\";\n\nexport const useGetGames = (): [\n  Game[] | undefined,\n  boolean,\n  any,\n  (season: number, session: number) => Promise<Game[]>\n] => {\n  const [games, setGames] = useState<Game[]>();\n  const { get, response, loading, error } = useRedditBallApi<Game[]>();\n\n  const fetchGameLog = useCallback(\n    async (season: number, session: number) => {\n      const fetchedGameLog = (await get(\n        `games/${season}/${session}`\n      )) as Game[];\n\n      if (response.ok) {\n        setGames(fetchedGameLog);\n      }\n\n      return fetchedGameLog;\n    },\n    [get, setGames, response]\n  );\n\n  return [games, loading, error, fetchGameLog];\n};\n","import { useCallback, useState } from \"react\";\nimport { Game } from \"../../interfaces/game\";\nimport { useRedditBallApi } from \"../useRedditBallApi/useRedditBallApi\";\n\nexport const useGetActiveGame = (): [\n  Game | undefined,\n  boolean,\n  any,\n  (teamTag: string) => Promise<Game>\n] => {\n  const [activeGame, setActiveGame] = useState<Game>();\n  const { get, response, loading, error } = useRedditBallApi<Game>();\n\n  const fetchActiveGame = useCallback(\n    async (teamTag: string) => {\n      const fetchedActiveGame = (await get(`/games/active/${teamTag}`)) as Game;\n\n      if (response.ok) {\n        setActiveGame(fetchedActiveGame);\n      }\n\n      return fetchedActiveGame;\n    },\n    [get, setActiveGame, response]\n  );\n\n  return [activeGame, loading, error, fetchActiveGame];\n};\n","import { useMemo } from \"react\";\nimport { Play } from \"../../interfaces/play\";\nimport ReactApexChart from \"react-apexcharts\";\n\ninterface HeatMapProps {\n  plays: Play[];\n}\n\nexport const HeatMap = (props: HeatMapProps) => {\n  const { plays } = props;\n\n  const series = useMemo(\n    () => [\n      {\n        name: \"0-100\",\n        data: [\n          {\n            x: \"0-25\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 0 && p.pitch < 26 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"26-50\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 25 && p.pitch < 51 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"51-75\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 50 && p.pitch < 76 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"75-100\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 75 && p.pitch < 101 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          }\n        ]\n      },\n      {\n        name: \"100-200\",\n        data: [\n          {\n            x: \"100-125\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 100 && p.pitch < 126 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"126-150\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 125 && p.pitch < 151 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"151-175\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 150 && p.pitch < 176 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"175-200\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 175 && p.pitch < 201 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          }\n        ]\n      },\n      {\n        name: \"200-300\",\n        data: [\n          {\n            x: \"200-225\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 200 && p.pitch < 226 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"226-250\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 225 && p.pitch < 251 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"252-275\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 250 && p.pitch < 276 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"275-300\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 275 && p.pitch < 301 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          }\n        ]\n      },\n      {\n        name: \"300-400\",\n        data: [\n          {\n            x: \"300-325\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 300 && p.pitch < 326 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"326-350\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 325 && p.pitch < 351 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"351-375\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 350 && p.pitch < 376 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"375-400\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 375 && p.pitch < 401 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          }\n        ]\n      },\n      {\n        name: \"400-500\",\n        data: [\n          {\n            x: \"400-425\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 400 && p.pitch < 426 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"426-450\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 425 && p.pitch < 451 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"451-475\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 450 && p.pitch < 476 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"475-500\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 475 && p.pitch < 501 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          }\n        ]\n      },\n      {\n        name: \"500-600\",\n        data: [\n          {\n            x: \"500-525\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 500 && p.pitch < 526 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"526-550\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 525 && p.pitch < 551 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"551-575\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 550 && p.pitch < 576 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"575-600\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 575 && p.pitch < 601 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          }\n        ]\n      },\n      {\n        name: \"600-700\",\n        data: [\n          {\n            x: \"600-625\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 600 && p.pitch < 626 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"626-650\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 625 && p.pitch < 651 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"651-675\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 650 && p.pitch < 676 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"675-700\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 675 && p.pitch < 701 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          }\n        ]\n      },\n      {\n        name: \"700-800\",\n        data: [\n          {\n            x: \"700-725\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 700 && p.pitch < 726 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"726-750\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 725 && p.pitch < 751 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"751-775\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 750 && p.pitch < 776 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"775-800\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 775 && p.pitch < 801 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          }\n        ]\n      },\n      {\n        name: \"800-9000\",\n        data: [\n          {\n            x: \"800-825\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 800 && p.pitch < 826 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"826-850\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 825 && p.pitch < 851 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"851-875\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 850 && p.pitch < 876 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"875-900\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 875 && p.pitch < 901 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          }\n        ]\n      },\n\n      {\n        name: \"900-1000\",\n        data: [\n          {\n            x: \"900-925\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 900 && p.pitch < 926 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"926-950\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 925 && p.pitch < 951 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"951-975\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 950 && p.pitch < 976 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"975-1000\",\n            y: plays.reduce(\n              (a: number[], p) => (\n                p.pitch > 975 && p.pitch < 1001 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          }\n        ]\n      }\n    ],\n    [plays]\n  );\n\n  const options = useMemo(\n    () => ({\n      chart: {\n        height: 600,\n        type: \"heatmap\",\n        zoom: {\n          enabled: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      colors: [\"#008FFB\"],\n      title: {\n        text: \"Pitches\"\n      }\n    }),\n    []\n  );\n\n  return (\n    <div>\n      <ReactApexChart\n        series={series}\n        options={options}\n        type=\"heatmap\"\n        height={600}\n      />\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport {\n  Container,\n  Content,\n  FlexboxGrid,\n  Header,\n  Loader,\n  Nav,\n  Toggle\n} from \"rsuite\";\nimport { useLeagueToggleContext } from \"../../../context/LeagueToggleContext/leagueToggleContext\";\nimport { useGetPlayerStats } from \"../../../hooks/useGetPlayerStats/useGetPlayerStats\";\nimport { useGetPlaysByPlayer } from \"../../../hooks/useGetPlaysByPlayer/useGetPlaysByPlayer\";\nimport { HeatMap } from \"../../heatMap/heatMap\";\nimport { LineGraph } from \"../../lineGraph/lineGraph\";\n\ninterface PlayerPageParams {\n  playerId: string;\n  playType: \"pitching\" | \"batting\";\n}\n\nexport const PlayerPage: React.FC = () => {\n  const { playerId, playType } = useParams<PlayerPageParams>();\n  const [selectedTab, setSelectedTab] = useState(0);\n  // const [currentPlayType, setCurrentPlayType] = useState<\n  //   \"pitching\" | \"batting\"\n  // >(playType);\n\n  const [, , , fetchPlayerStats] = useGetPlayerStats();\n  const [plays, loadingPlays, , fetchPlaysByPlayer] = useGetPlaysByPlayer();\n\n  const { currentLeague, setCurrentLeague } = useLeagueToggleContext();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (playerId) {\n      fetchPlayerStats(playerId);\n      fetchPlaysByPlayer(playerId, playType);\n    }\n  }, [playerId, playType, fetchPlayerStats, fetchPlaysByPlayer]);\n\n  return (\n    <Container style={{ height: \"100%\" }}>\n      <Header>\n        <FlexboxGrid justify=\"space-between\" style={{ padding: 4 }}>\n          <FlexboxGrid align=\"middle\" justify=\"start\" style={{ width: \"50%\" }}>\n            <FlexboxGrid.Item>\n              <Toggle\n                size=\"md\"\n                checked={currentLeague === \"milr\"}\n                onChange={(checked: boolean) => {\n                  console.log(\"checked\", checked);\n                  setCurrentLeague(checked ? \"milr\" : \"mlr\");\n                }}\n                checkedChildren=\"MiLR\"\n                unCheckedChildren=\"MiLR\"\n              />\n            </FlexboxGrid.Item>\n\n            <FlexboxGrid.Item style={{ marginLeft: 8 }}>\n              <Toggle\n                size=\"md\"\n                checked={playType === \"pitching\"}\n                onChange={(checked: boolean) => {\n                  history.replace(\n                    `/player/${playerId}/${checked ? \"pitching\" : \"batting\"}`\n                  );\n                }}\n                checkedChildren=\"Pitching\"\n                unCheckedChildren=\"Batting\"\n              />\n            </FlexboxGrid.Item>\n          </FlexboxGrid>\n        </FlexboxGrid>\n      </Header>\n\n      <Content style={{ height: \"100%\" }}>\n        <FlexboxGrid\n          justify=\"center\"\n          align=\"middle\"\n          style={{ height: \"100%\", width: \"100%\" }}\n        >\n          {loadingPlays ? (\n            <Loader size=\"lg\" />\n          ) : (\n            <>\n              <FlexboxGrid style={{ width: \"100%\" }}>\n                <Nav\n                  appearance={\"tabs\"}\n                  activeKey={selectedTab}\n                  onSelect={(e: any) => {\n                    setSelectedTab(e);\n                  }}\n                >\n                  <Nav.Item eventKey={0}>Chart</Nav.Item>\n                  <Nav.Item eventKey={1}>Heat map</Nav.Item>\n                </Nav>\n              </FlexboxGrid>\n\n              <FlexboxGrid.Item style={{ height: \"100%\", width: \"100%\" }}>\n                {plays ? (\n                  selectedTab === 0 ? (\n                    <LineGraph plays={plays} />\n                  ) : (\n                    <HeatMap plays={plays} />\n                  )\n                ) : (\n                  \"No plays available\"\n                )}\n              </FlexboxGrid.Item>\n            </>\n          )}\n        </FlexboxGrid>\n      </Content>\n    </Container>\n  );\n};\n","import { useCallback, useState } from \"react\";\nimport { Player } from \"../../interfaces/player\";\nimport { useRedditBallApi } from \"../useRedditBallApi/useRedditBallApi\";\n\nexport const useGetPlayerStats = (): [\n  Player | undefined,\n  boolean,\n  any,\n  (id: string) => Promise<Player>\n] => {\n  const [games, setGames] = useState<Player>();\n  const { get, response, loading, error } = useRedditBallApi<Player>();\n\n  const fetchPlayerStats = useCallback(\n    async (id: string) => {\n      const fetchedGameLog = (await get(`players/${id}/stats`)) as Player;\n\n      if (response.ok) {\n        setGames(fetchedGameLog);\n      }\n\n      return fetchedGameLog;\n    },\n    [get, setGames, response]\n  );\n\n  return [games, loading, error, fetchPlayerStats];\n};\n","import { useCallback, useState } from \"react\";\nimport { Play } from \"../../interfaces/play\";\nimport { useRedditBallApi } from \"../useRedditBallApi/useRedditBallApi\";\n\nexport const useGetPlaysByPlayer = (): [\n  Play[] | undefined,\n  boolean,\n  any,\n  (playerId: string, playType: \"pitching\" | \"batting\") => Promise<Play[]>\n] => {\n  const [plays, setPlays] = useState<Play[]>();\n  const { get, response, loading, error } = useRedditBallApi<Play[]>();\n\n  const fetchPlaysByPlayer = useCallback(\n    async (playerId: string, playType: \"pitching\" | \"batting\") => {\n      const fetchedPlays = (await get(\n        `players/${playerId}/plays/${playType}`\n      )) as Play[];\n\n      if (response.ok) {\n        setPlays(fetchedPlays);\n      }\n\n      return fetchedPlays;\n    },\n    [get, setPlays, response]\n  );\n\n  return [plays, loading, error, fetchPlaysByPlayer];\n};\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport { GamePage } from \"../pages/gamePage/gamePage\";\nimport { PlayerPage } from \"../pages/playerPage/playerPage\";\n\nexport const Routes: React.FC = () => {\n  return (\n    <Router basename=\"/fake-baseball-scouting-page/\">\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/game\" />\n        <Route path=\"/game\">\n          <GamePage />\n        </Route>\n        <Route path=\"/player/:playerId/:playType\">\n          <PlayerPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Routes } from \"../routes/Routes\";\n\nimport \"rsuite/dist/styles/rsuite-default.css\";\nimport { LeagueToggleContextProvider } from \"../../context/LeagueToggleContext/leagueToggleContext\";\n\nexport const App: React.FC = () => {\n  return (\n    <div style={{ height: \"100vh\", width: \"100vw\" }}>\n      <LeagueToggleContextProvider>\n        <Routes />\n      </LeagueToggleContextProvider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}