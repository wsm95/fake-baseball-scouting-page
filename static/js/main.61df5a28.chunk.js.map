{"version":3,"sources":["context/LeagueToggleContext/leagueToggleContext.tsx","hooks/useRedditBallApi/useRedditBallApi.tsx","components/playTable/playTable.tsx","data/teamsMaps.ts","components/pages/gamePage/gamePage.tsx","hooks/useGetGameLog/useGetGameLog.tsx","hooks/useGetGames/useGetGames.tsx","hooks/useGetActiveGame/useGetActiveGame.tsx","components/heatMap/heatMap.tsx","components/playGraph/playGraph.tsx","hooks/useGetPlateAppearances/useGetPlateAppearances.tsx","hooks/useSwing420Api/useSwing420Api.tsx","components/pages/playerPage/playerPage.tsx","components/routes/Routes.tsx","components/app/App.tsx","index.tsx"],"names":["LeagueToggleContext","React","createContext","currentLeague","setCurrentLeague","LeagueToggleContextProvider","props","useParams","history","useHistory","Provider","value","newLeague","replace","location","pathname","useLeagueToggleContext","context","useContext","Error","useRedditBallApi","apiVerson","useFetch","PlayTable","plays","data","useMemo","inningsMap","reduce","acc","p","beforeState","inning","push","id","pitcher","batter","pitch","swing","diff","result","score","afterState","awayScore","homeScore","inningTableColumns","Object","entries","forEach","index","children","LinkCell","rowData","dataKey","player","playType","Table","Cell","to","firstName","lastName","isTree","defaultExpandAllRows","rowKey","Column","flexGrow","HeaderCell","mlrTeamsMap","ARI","BOS","CHC","CIN","COL","DET","HOU","KCR","TEX","LAD","MIA","MIL","ATL","NYM","NYY","OAK","PHI","PIT","SDP","SFG","STL","TBR","TOR","CLE","BAL","SEA","CWS","MIN","MTL","LAA","milrTeamsMap","LMN","SAR","PHB","POR","WWC","LID","MVS","SLT","CWJ","BAC","SAS","FRG","SUP","PBA","CBC","TTT","RBD","TAK","BBB","JEF","MPD","AAL","MBT","PUK","CIM","SGP","HEL","LIM","GamePage","useState","selectedTab","setSelectedTab","selectedSeason","setSelectedSeason","selectedSession","setSelectedSession","selectedGame","setSelectedGame","selectedActiveTeam","setSelectedActiveTeam","selectedTeamsMap","setSelectedTeamsMap","gameLog","setGameLog","get","response","loading","error","useCallback","gameId","a","fetchedGameLog","ok","useGetGameLog","loadingGameLogs","fetchGameLog","games","setGames","season","session","useGetGames","loadingGames","fetchGames","activeGame","setActiveGame","teamTag","fetchedActiveGame","useGetActiveGame","loadingActiveGame","fetchActiveGame","useEffect","fetchGamesWrapper","undefined","game","Container","style","height","Header","FlexboxGrid","justify","padding","align","width","Item","Toggle","size","checked","onChange","console","log","checkedChildren","unCheckedChildren","marginLeft","colspan","label","styles","menuPortal","base","zIndex","menuPortalTarget","document","body","team","options","sort","map","tag","marginRight","Array","keys","x","s","isLoading","awayTeam","name","homeTeam","g","Content","Loader","textAlign","gameInfo","completed","outs","firstOccupied","secondOccupied","thirdOccupied","getGameInfo","Nav","appearance","activeKey","onSelect","e","eventKey","filter","reverse","HeatMap","plateAppearances","series","y","length","chart","type","zoom","enabled","animations","dataLabels","colors","PlayGraph","animate","redrawOnParentResize","xaxis","categories","markers","showNullDataPoints","stroke","dashArray","yaxis","min","max","plateAppearance","currentPlateAppearance","delta","Math","abs","useGetPlateAppearances","PlateAppearances","setPlateAppearances","playerId","fetchedPlateAppearances","PlayerPage","currentPlayerId","setCurrentPlayerId","loadingPlateAppearances","fetchPlateAppearances","filteredPlateAppearances","toString","timeout","useRef","window","clearTimeout","current","setTimeout","Input","placeholder","Routes","exact","from","path","Pages","useRouteMatch","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.61df5a28.chunk.js","sourcesContent":["import React, { ProviderProps } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\n\nexport interface LeagueToggleContextProps {\n  currentLeague: \"mlr\" | \"milr\";\n  setCurrentLeague: (newLeague: \"mlr\" | \"milr\") => void;\n}\n\ninterface LeagueContextParams {\n  currentLeague: \"mlr\" | \"milr\";\n}\n\ninterface LeagueToggleContextProviderProps\n  extends Omit<ProviderProps<LeagueToggleContextProps>, \"value\"> {}\n\nexport const LeagueToggleContext = React.createContext<\n  LeagueToggleContextProps\n>({\n  currentLeague: \"mlr\",\n  setCurrentLeague: () => {}\n});\n\nexport const LeagueToggleContextProvider = (\n  props: LeagueToggleContextProviderProps\n) => {\n  // const [currentLeague, setCurrentLeague] = useState<\"mlr\" | \"milr\">(\"mlr\");\n\n  const { currentLeague } = useParams<LeagueContextParams>();\n  const history = useHistory();\n\n  const setCurrentLeague = (newLeague: \"mlr\" | \"milr\") => {\n    return history.replace(\n      history.location.pathname\n        .replace(\"mlr\", newLeague)\n        .replace(\"milr\", newLeague)\n    );\n  };\n\n  return (\n    <LeagueToggleContext.Provider\n      value={{ currentLeague, setCurrentLeague }}\n      {...props}\n    />\n  );\n};\n\nexport const useLeagueToggleContext = () => {\n  const context = React.useContext(LeagueToggleContext);\n  if (context == null) {\n    throw new Error(\"LeagueToggleContext must be used inside provider\");\n  }\n  return context;\n};\n","import useFetch from \"use-http\";\nimport { useLeagueToggleContext } from \"../../context/LeagueToggleContext/leagueToggleContext\";\n\nexport const useRedditBallApi = <T,>(apiVerson: string = \"v1\") => {\n  const { currentLeague } = useLeagueToggleContext();\n\n  return useFetch<T>(\n    `https://${\n      currentLeague === \"milr\" ? currentLeague + \".\" : \"\"\n    }redditball.com/api/${apiVerson}`\n  );\n};\n","import React from \"react\";\nimport { Play } from \"../../interfaces/play\";\nimport { Table, TableCellProps } from \"rsuite\";\nimport { Link } from \"react-router-dom\";\nimport { Player } from \"../../interfaces/player\";\n\ninterface TableColumn {\n  id: number;\n  pitcher: Player;\n  batter: Player;\n  pitch: number;\n  swing: number;\n  diff: number;\n  result: string;\n  score: string;\n}\n\ninterface PlayTableProps {\n  plays: Play[];\n}\n\nexport const PlayTable = (props: PlayTableProps) => {\n  const { plays } = props;\n\n  const data = React.useMemo(() => {\n    const inningsMap = plays.reduce(\n      (acc: { [inning: string]: TableColumn[] }, p: Play) => {\n        if (!acc[p.beforeState.inning]) {\n          acc[p.beforeState.inning] = [];\n        }\n\n        acc[p.beforeState.inning].push({\n          id: p.id,\n          pitcher: p.pitcher,\n          batter: p.batter,\n          pitch: p.pitch,\n          swing: p.swing,\n          diff: p.diff,\n          result: p.result,\n          score: p.afterState.awayScore + \"-\" + p.afterState.homeScore\n        });\n\n        return acc;\n      },\n      {}\n    );\n\n    const inningTableColumns: any[] = [];\n    Object.entries(inningsMap).forEach(([inning, plays], index) => {\n      inningTableColumns.push({\n        id: index,\n        inning: inning,\n        children: plays\n      });\n    });\n\n    return inningTableColumns;\n  }, [plays]);\n\n  const LinkCell = (props: TableCellProps) => {\n    const { rowData, dataKey } = props;\n\n    const player = (rowData as TableColumn)[\n      dataKey as keyof TableColumn\n    ] as Player;\n\n    const playType = dataKey === \"pitcher\" ? \"pitching\" : \"batting\";\n\n    if (player) {\n      return (\n        <Table.Cell {...props}>\n          <Link to={`/player/${player.id}/${playType}`}>\n            {player.firstName + \" \" + player.lastName}\n          </Link>\n        </Table.Cell>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <div>\n      <Table isTree defaultExpandAllRows rowKey=\"id\" data={data}>\n        <Table.Column flexGrow={1}>\n          <Table.HeaderCell>Inning</Table.HeaderCell>\n          <Table.Cell dataKey=\"inning\" />\n        </Table.Column>\n\n        <Table.Column flexGrow={1}>\n          <Table.HeaderCell>Pitcher</Table.HeaderCell>\n          <LinkCell dataKey=\"pitcher\" />\n        </Table.Column>\n\n        <Table.Column flexGrow={1}>\n          <Table.HeaderCell>Batter</Table.HeaderCell>\n          <LinkCell dataKey=\"batter\" />\n        </Table.Column>\n\n        <Table.Column flexGrow={1}>\n          <Table.HeaderCell>Pitch</Table.HeaderCell>\n          <Table.Cell dataKey=\"pitch\" />\n        </Table.Column>\n\n        <Table.Column flexGrow={1}>\n          <Table.HeaderCell>Swing</Table.HeaderCell>\n          <Table.Cell dataKey=\"swing\" />\n        </Table.Column>\n\n        <Table.Column flexGrow={1}>\n          <Table.HeaderCell>Diff</Table.HeaderCell>\n          <Table.Cell dataKey=\"diff\" />\n        </Table.Column>\n\n        <Table.Column flexGrow={1}>\n          <Table.HeaderCell>Result</Table.HeaderCell>\n          <Table.Cell dataKey=\"result\" />\n        </Table.Column>\n\n        <Table.Column flexGrow={1}>\n          <Table.HeaderCell>Score</Table.HeaderCell>\n          <Table.Cell dataKey=\"score\" />\n        </Table.Column>\n      </Table>\n    </div>\n  );\n};\n","export const mlrTeamsMap: { [tag: string]: string } = {\n  ARI: \"Arizona Diamondbacks\",\n  BOS: \"Boston Red Sox\",\n  CHC: \"Chicago Cubs\",\n  CIN: \"Cincinnati Reds\",\n  COL: \"Colorado Rockies\",\n  DET: \"Detroit Tigers\",\n  HOU: \"Houston Colt 45's\",\n  KCR: \"Kansas City Royals\",\n  TEX: \"Texas Rangers\",\n  LAD: \"Los Angeles Dodgers\",\n  MIA: \"Miami Marlins\",\n  MIL: \"Milwaukee Brewers\",\n  ATL: \"Atlanta Braves\",\n  NYM: \"New York Mets\",\n  NYY: \"New York Yankees\",\n  OAK: \"Oakland Athletics\",\n  PHI: \"Philadelphia Phillies\",\n  PIT: \"Pittsburgh Pirates\",\n  SDP: \"San Diego Padres\",\n  SFG: \"San Francisco Giants\",\n  STL: \"St. Louis Cardinals\",\n  TBR: \"Tampa Bay Rays\",\n  TOR: \"Toronto Blue Jays\",\n  CLE: \"Cleveland Guardians\",\n  BAL: \"Baltimore Orioles\",\n  SEA: \"Seattle Mariners\",\n  CWS: \"Chicago White Sox\",\n  MIN: \"Minnesota Twins\",\n  MTL: \"Montreal Expos\",\n  LAA: \"Los Angeles Angels\"\n};\n\nexport const milrTeamsMap: { [tag: string]: string } = {\n  LMN: \"Lemon Lake Lemons\",\n  SAR: \"Sarasota Savages\",\n  PHB: \"Philadelphia B's\",\n  POR: \"Portland Roses\",\n  WWC: \"Waukesha White Claws\",\n  LID: \"Long Island Ducks\",\n  MVS: \"Martha's Vineyard Sandpipers\",\n  SLT: \"South Side L Train\",\n  CWJ: \"Caulfield Walls of Jericho\",\n  BAC: \"Blue Grass Ax Cats\",\n  SAS: \"Saskatoon Saloons\",\n  FRG: \"Fargo Woodchippers\",\n  SUP: \"Surprise, Pitches\",\n  PBA: \"Pensacola Blue Angels\",\n  CBC: \"Congo Bongocats\",\n  TTT: \"Tallahassee Toxic Tyrants\",\n  RBD: \"Rookie Bat Dogs\",\n  TAK: \"Talladega Knights\",\n  BBB: \"Bronzeville Birthday Boys\",\n  JEF: \"Jefferson Jeffies\",\n  MPD: \"Merseburg Pulse Demons\",\n  AAL: \"Allegheny Alcoholics\",\n  MBT: \"Missouri Baseball Team\",\n  PUK: \"Amherst Pukwudgies\",\n  CIM: \"Cohen's Island Malamutes\",\n  SGP: \"Singapore Slingers\",\n  HEL: \"Helena Handbaskets\",\n  LIM: \"Limerick Limes\"\n};\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport { useGetGameLog } from \"../../../hooks/useGetGameLog/useGetGameLog\";\nimport Select from \"react-select\";\nimport { useGetGames } from \"../../../hooks/useGetGames/useGetGames\";\nimport { Game } from \"../../../interfaces/game\";\nimport { PlayTable } from \"../../playTable/playTable\";\nimport { Play } from \"../../../interfaces/play\";\nimport {\n  Container,\n  Content,\n  FlexboxGrid,\n  Header,\n  Loader,\n  Nav,\n  Toggle\n} from \"rsuite\";\nimport { useLeagueToggleContext } from \"../../../context/LeagueToggleContext/leagueToggleContext\";\nimport { mlrTeamsMap, milrTeamsMap } from \"../../../data/teamsMaps\";\nimport { useGetActiveGame } from \"../../../hooks/useGetActiveGame/useGetActiveGame\";\nimport { Link } from \"react-router-dom\";\n\nexport const GamePage: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [selectedSeason, setSelectedSeason] = useState(6);\n  const [selectedSession, setSelectedSession] = useState(1);\n  const [selectedGame, setSelectedGame] = useState<Game>();\n  const [selectedActiveTeam, setSelectedActiveTeam] = useState<string>();\n  const [selectedTeamsMap, setSelectedTeamsMap] = useState(mlrTeamsMap);\n\n  const [gameLog, loadingGameLogs, , fetchGameLog] = useGetGameLog();\n  const [games, loadingGames, , fetchGames] = useGetGames();\n  const [activeGame, loadingActiveGame, , fetchActiveGame] = useGetActiveGame();\n\n  const { currentLeague, setCurrentLeague } = useLeagueToggleContext();\n\n  useEffect(() => {\n    const fetchGamesWrapper = async () => {\n      await fetchGames(selectedSeason, selectedSession);\n    };\n    fetchGamesWrapper();\n\n    setSelectedGame(undefined);\n  }, [selectedSeason, selectedSession, fetchGames]);\n\n  useEffect(() => {\n    if (selectedGame) {\n      fetchGameLog(selectedGame.id);\n\n      setSelectedActiveTeam(undefined);\n    }\n  }, [selectedGame, fetchGameLog]);\n\n  useEffect(() => {\n    if (selectedActiveTeam) {\n      fetchActiveGame(selectedActiveTeam);\n\n      setSelectedGame(undefined);\n    }\n  }, [selectedActiveTeam, fetchActiveGame]);\n\n  useEffect(() => {\n    if (activeGame) {\n      fetchGameLog(activeGame.id);\n    }\n  }, [activeGame, fetchGameLog]);\n\n  useEffect(() => {\n    setSelectedGame(undefined);\n    setSelectedActiveTeam(undefined);\n    setSelectedTeamsMap(currentLeague === \"milr\" ? milrTeamsMap : mlrTeamsMap);\n  }, [currentLeague]);\n\n  const game = useMemo(() => {\n    return selectedGame\n      ? selectedGame\n      : activeGame && selectedActiveTeam\n      ? activeGame\n      : undefined;\n  }, [selectedGame, activeGame, selectedActiveTeam]);\n\n  const getManOnState = () => {\n    if (game?.firstOccupied && !game?.secondOccupied && !game?.thirdOccupied) {\n      return \", Man on first\";\n    } else if (\n      !game?.firstOccupied &&\n      game?.secondOccupied &&\n      !game?.thirdOccupied\n    ) {\n      return \", Man on second\";\n    } else if (\n      !game?.firstOccupied &&\n      !game?.secondOccupied &&\n      game?.thirdOccupied\n    ) {\n      return \", Man on third\";\n    } else if (\n      game?.firstOccupied &&\n      game?.secondOccupied &&\n      !game?.thirdOccupied\n    ) {\n      return \", Men on first and second\";\n    } else if (\n      game?.firstOccupied &&\n      !game?.secondOccupied &&\n      game?.thirdOccupied\n    ) {\n      return \", Men on first and third\";\n    } else if (\n      !game?.firstOccupied &&\n      game?.secondOccupied &&\n      game?.thirdOccupied\n    ) {\n      return \", Men of second and third\";\n    } else if (\n      game?.firstOccupied &&\n      game?.secondOccupied &&\n      game?.thirdOccupied\n    ) {\n      return \", Bases loaded\";\n    }\n\n    return \"\";\n  };\n\n  const getGameInfo = () => {\n    let gameInfo = `${game?.awayScore} - ${game?.homeScore}`;\n    if (!game?.completed) {\n      gameInfo = `${gameInfo} | ${game?.inning} ${\n        game?.outs\n      } outs ${getManOnState()}`;\n    }\n\n    return gameInfo;\n  };\n\n  return (\n    <Container style={{ height: \"100%\" }}>\n      <Header>\n        <FlexboxGrid justify=\"space-between\" style={{ padding: 4 }}>\n          <FlexboxGrid align=\"middle\" justify=\"start\" style={{ width: \"50%\" }}>\n            <FlexboxGrid.Item>\n              <Toggle\n                size=\"md\"\n                checked={currentLeague === \"milr\"}\n                onChange={(checked: boolean) => {\n                  console.log(\"checked\", checked);\n                  setCurrentLeague(checked ? \"milr\" : \"mlr\");\n                }}\n                checkedChildren=\"MiLR\"\n                unCheckedChildren=\"MiLR\"\n              />\n            </FlexboxGrid.Item>\n\n            <FlexboxGrid.Item style={{ marginLeft: 8 }} colspan={8}>\n              <Select\n                value={{\n                  label:\n                    selectedActiveTeam && selectedTeamsMap[selectedActiveTeam]\n                      ? selectedTeamsMap[selectedActiveTeam]\n                      : \"Select active game for...\",\n                  value: selectedActiveTeam ? selectedActiveTeam : \"\"\n                }}\n                styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n                menuPortalTarget={document.body}\n                onChange={(team: any) => {\n                  setSelectedActiveTeam(team.value);\n                }}\n                options={\n                  Object.entries(selectedTeamsMap)\n                    .sort()\n                    .map(([tag, teamName]) => ({\n                      label: teamName,\n                      value: tag\n                    })) as any\n                }\n              />\n            </FlexboxGrid.Item>\n\n            <FlexboxGrid.Item style={{ marginLeft: 16 }}>\n              <Link to={`/${currentLeague}/player`}>\n                {\"Go to player page ➡️\"}\n              </Link>\n            </FlexboxGrid.Item>\n          </FlexboxGrid>\n\n          <FlexboxGrid justify=\"end\" style={{ width: \"50%\" }}>\n            <FlexboxGrid.Item colspan={3} style={{ marginRight: 4 }}>\n              <Select\n                value={{ label: selectedSeason, value: selectedSeason }}\n                styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n                menuPortalTarget={document.body}\n                onChange={(season: any) => {\n                  setSelectedSeason(season.value);\n                }}\n                options={[...Array(6).keys()]\n                  .map(x => ++x)\n                  .map(s => ({ label: s, value: s }))}\n              />\n            </FlexboxGrid.Item>\n\n            <FlexboxGrid.Item colspan={3} style={{ marginRight: 4 }}>\n              <Select\n                value={{ label: selectedSession, value: selectedSession }}\n                styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n                menuPortalTarget={document.body}\n                onChange={(season: any) => {\n                  setSelectedSession(season.value);\n                }}\n                options={[...Array(21).keys()]\n                  .map(x => ++x)\n                  .map(s => ({ label: s, value: s }))}\n              />\n            </FlexboxGrid.Item>\n\n            <FlexboxGrid.Item colspan={6}>\n              <Select\n                isLoading={loadingGames}\n                styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n                menuPortalTarget={document.body}\n                value={{\n                  label: selectedGame\n                    ? `${selectedGame.awayTeam.name} @ ${selectedGame.homeTeam.name}`\n                    : \"Pick game\",\n                  value: selectedGame\n                }}\n                onChange={(game: any) => {\n                  setSelectedGame(game.value);\n                }}\n                options={games?.map(g => ({\n                  label: `${g.awayTeam.name} @ ${g.homeTeam.name}`,\n                  value: g\n                }))}\n              />\n            </FlexboxGrid.Item>\n          </FlexboxGrid>\n        </FlexboxGrid>\n      </Header>\n\n      <Content style={{ height: \"100%\" }}>\n        <FlexboxGrid\n          justify=\"center\"\n          align=\"middle\"\n          style={{ height: \"100%\", width: \"100%\" }}\n        >\n          {loadingGameLogs || loadingActiveGame ? (\n            <Loader size=\"lg\" />\n          ) : game && gameLog ? (\n            <>\n              <FlexboxGrid.Item style={{ width: \"100%\", textAlign: \"center\" }}>\n                <h3>{`${game?.awayTeam.name} @ ${game?.homeTeam.name}`}</h3>\n                <h5>{`${getGameInfo()}`}</h5>\n              </FlexboxGrid.Item>\n\n              <FlexboxGrid.Item style={{ width: \"100%\" }}>\n                <Nav\n                  appearance={\"tabs\"}\n                  activeKey={selectedTab}\n                  onSelect={(e: any) => {\n                    setSelectedTab(e);\n                  }}\n                >\n                  <Nav.Item eventKey={0}>{game.awayTeam.name}</Nav.Item>\n                  <Nav.Item eventKey={1}>{game.homeTeam.name}</Nav.Item>\n                </Nav>\n              </FlexboxGrid.Item>\n\n              <FlexboxGrid.Item style={{ height: \"auto\", width: \"100%\" }}>\n                <PlayTable\n                  plays={gameLog\n                    .filter(\n                      (p: Play) =>\n                        p.beforeState.inning[0] ===\n                        (selectedTab === 0 ? \"B\" : \"T\")\n                    )\n                    .reverse()}\n                />\n                {/* <PlayGraph\n                  plays={gameLog\n                    .filter(\n                      (p: Play) =>\n                        p.beforeState.inning[0] ===\n                        (selectedTab === 0 ? \"B\" : \"T\")\n                    )\n                    .reverse()}\n                  animate={true}\n                /> */}\n              </FlexboxGrid.Item>\n            </>\n          ) : (\n            \"Select a game\"\n          )}\n        </FlexboxGrid>\n      </Content>\n    </Container>\n  );\n};\n","import { useCallback, useState } from \"react\";\nimport { Play } from \"../../interfaces/play\";\nimport { useRedditBallApi } from \"../useRedditBallApi/useRedditBallApi\";\n\nexport const useGetGameLog = (): [\n  Play[] | undefined,\n  boolean,\n  any,\n  (gameId: number) => Promise<Play[]>\n] => {\n  const [gameLog, setGameLog] = useState<Play[]>();\n  const { get, response, loading, error } = useRedditBallApi<Play[]>();\n\n  const fetchGameLog = useCallback(\n    async (gameId: number) => {\n      const fetchedGameLog = (await get(`games/${gameId}/log`)) as Play[];\n\n      if (response.ok) {\n        setGameLog(fetchedGameLog);\n      }\n\n      return fetchedGameLog;\n    },\n    [get, setGameLog, response]\n  );\n\n  return [gameLog, loading, error, fetchGameLog];\n};\n","import { useCallback, useState } from \"react\";\nimport { Game } from \"../../interfaces/game\";\nimport { useRedditBallApi } from \"../useRedditBallApi/useRedditBallApi\";\n\nexport const useGetGames = (): [\n  Game[] | undefined,\n  boolean,\n  any,\n  (season: number, session: number) => Promise<Game[]>\n] => {\n  const [games, setGames] = useState<Game[]>();\n  const { get, response, loading, error } = useRedditBallApi<Game[]>();\n\n  const fetchGameLog = useCallback(\n    async (season: number, session: number) => {\n      const fetchedGameLog = (await get(\n        `games/${season}/${session}`\n      )) as Game[];\n\n      if (response.ok) {\n        setGames(fetchedGameLog);\n      }\n\n      return fetchedGameLog;\n    },\n    [get, setGames, response]\n  );\n\n  return [games, loading, error, fetchGameLog];\n};\n","import { useCallback, useState } from \"react\";\nimport { Game } from \"../../interfaces/game\";\nimport { useRedditBallApi } from \"../useRedditBallApi/useRedditBallApi\";\n\nexport const useGetActiveGame = (): [\n  Game | undefined,\n  boolean,\n  any,\n  (teamTag: string) => Promise<Game>\n] => {\n  const [activeGame, setActiveGame] = useState<Game>();\n  const { get, response, loading, error } = useRedditBallApi<Game>();\n\n  const fetchActiveGame = useCallback(\n    async (teamTag: string) => {\n      const fetchedActiveGame = (await get(`/games/active/${teamTag}`)) as Game;\n\n      if (response.ok) {\n        setActiveGame(fetchedActiveGame);\n      }\n\n      return fetchedActiveGame;\n    },\n    [get, setActiveGame, response]\n  );\n\n  return [activeGame, loading, error, fetchActiveGame];\n};\n","import { useMemo } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { PlateAppearance } from \"../../interfaces/plateAppearance\";\n\ninterface HeatMapProps {\n  plateAppearances: PlateAppearance[];\n}\n\nexport const HeatMap = (props: HeatMapProps) => {\n  const { plateAppearances } = props;\n\n  const series = useMemo(\n    () => [\n      {\n        name: \"0-100\",\n        data: [\n          {\n            x: \"0-25\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 0 && p.pitch < 26 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"26-50\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 25 && p.pitch < 51 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"51-75\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 50 && p.pitch < 76 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"75-100\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 75 && p.pitch < 101 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          }\n        ]\n      },\n      {\n        name: \"100-200\",\n        data: [\n          {\n            x: \"100-125\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 100 && p.pitch < 126 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"126-150\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 125 && p.pitch < 151 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"151-175\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 150 && p.pitch < 176 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"175-200\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 175 && p.pitch < 201 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          }\n        ]\n      },\n      {\n        name: \"200-300\",\n        data: [\n          {\n            x: \"200-225\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 200 && p.pitch < 226 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"226-250\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 225 && p.pitch < 251 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"252-275\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 250 && p.pitch < 276 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"275-300\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 275 && p.pitch < 301 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          }\n        ]\n      },\n      {\n        name: \"300-400\",\n        data: [\n          {\n            x: \"300-325\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 300 && p.pitch < 326 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"326-350\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 325 && p.pitch < 351 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"351-375\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 350 && p.pitch < 376 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"375-400\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 375 && p.pitch < 401 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          }\n        ]\n      },\n      {\n        name: \"400-500\",\n        data: [\n          {\n            x: \"400-425\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 400 && p.pitch < 426 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"426-450\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 425 && p.pitch < 451 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"451-475\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 450 && p.pitch < 476 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"475-500\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 475 && p.pitch < 501 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          }\n        ]\n      },\n      {\n        name: \"500-600\",\n        data: [\n          {\n            x: \"500-525\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 500 && p.pitch < 526 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"526-550\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 525 && p.pitch < 551 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"551-575\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 550 && p.pitch < 576 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"575-600\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 575 && p.pitch < 601 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          }\n        ]\n      },\n      {\n        name: \"600-700\",\n        data: [\n          {\n            x: \"600-625\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 600 && p.pitch < 626 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"626-650\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 625 && p.pitch < 651 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"651-675\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 650 && p.pitch < 676 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"675-700\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 675 && p.pitch < 701 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          }\n        ]\n      },\n      {\n        name: \"700-800\",\n        data: [\n          {\n            x: \"700-725\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 700 && p.pitch < 726 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"726-750\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 725 && p.pitch < 751 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"751-775\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 750 && p.pitch < 776 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"775-800\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 775 && p.pitch < 801 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          }\n        ]\n      },\n      {\n        name: \"800-9000\",\n        data: [\n          {\n            x: \"800-825\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 800 && p.pitch < 826 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"826-850\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 825 && p.pitch < 851 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"851-875\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 850 && p.pitch < 876 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"875-900\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 875 && p.pitch < 901 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          }\n        ]\n      },\n\n      {\n        name: \"900-1000\",\n        data: [\n          {\n            x: \"900-925\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 900 && p.pitch < 926 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"926-950\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 925 && p.pitch < 951 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"951-975\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 950 && p.pitch < 976 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          },\n          {\n            x: \"975-1000\",\n            y: plateAppearances.reduce(\n              (a: number[], p) => (\n                p.pitch > 975 && p.pitch < 1001 && a.push(p.pitch), a\n              ),\n              []\n            ).length\n          }\n        ]\n      }\n    ],\n    [plateAppearances]\n  );\n\n  const options = useMemo(\n    () => ({\n      chart: {\n        height: 600,\n        type: \"heatmap\",\n        zoom: {\n          enabled: false\n        },\n        animations: {\n          enabled: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      colors: [\"#008FFB\"]\n    }),\n    []\n  );\n\n  return (\n    <div>\n      <ReactApexChart\n        series={series}\n        options={options}\n        type=\"heatmap\"\n        height={600}\n      />\n    </div>\n  );\n};\n","import { useMemo } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { PlateAppearance } from \"../../interfaces/plateAppearance\";\n\ninterface PlayGraphProps {\n  plateAppearances: PlateAppearance[];\n  animate?: boolean;\n  zoom?: boolean;\n}\n\nexport const PlayGraph = (props: PlayGraphProps) => {\n  const { plateAppearances, animate, zoom } = props;\n\n  const options = useMemo(\n    () => ({\n      chart: {\n        id: \"line\",\n        zoom: {\n          enabled: zoom\n        },\n        redrawOnParentResize: false,\n        animations: {\n          enabled: animate\n        }\n      },\n      xaxis: {\n        categories: plateAppearances.map(p => p.inning + \".\" + p.outs)\n      },\n      markers: {\n        size: 5,\n        showNullDataPoints: false\n      },\n      stroke: { width: [7, 2, 5], dashArray: [0, 3, 0] },\n      yaxis: {\n        min: 0,\n        max: 1000\n      }\n    }),\n    [plateAppearances, animate, zoom]\n  );\n\n  const series = useMemo(\n    () => [\n      {\n        name: \"Pitch\",\n        type: \"line\",\n        data: plateAppearances.map(\n          (plateAppearance: PlateAppearance) => plateAppearance.pitch\n        )\n      },\n      {\n        name: \"Swing\",\n        type: \"line\",\n        data: plateAppearances.map(\n          (plateAppearance: PlateAppearance) => plateAppearance.swing\n        )\n      },\n      {\n        name: \"Delta\",\n        type: \"column\",\n        data: plateAppearances.map(\n          (\n            currentPlateAppearance: PlateAppearance,\n            index: number,\n            plateAppearances: PlateAppearance[]\n          ) => {\n            if (\n              index > 0 &&\n              plateAppearances[index - 1] &&\n              currentPlateAppearance.pitch &&\n              currentPlateAppearance.swing\n            ) {\n              let delta = Math.abs(\n                currentPlateAppearance.pitch - plateAppearances[index - 1].pitch\n              );\n\n              return delta > 500 ? 1000 - delta : delta;\n            } else {\n              return null;\n            }\n          }\n        )\n      }\n    ],\n    [plateAppearances]\n  );\n\n  return (\n    <ReactApexChart\n      options={options}\n      series={series}\n      type=\"line\"\n      height=\"100%\"\n    />\n  );\n};\n","import { useCallback, useState } from \"react\";\nimport { useLeagueToggleContext } from \"../../context/LeagueToggleContext/leagueToggleContext\";\nimport { PlateAppearance } from \"../../interfaces/plateAppearance\";\nimport { useSwing420Api } from \"../useSwing420Api/useSwing420Api\";\n\nexport const useGetPlateAppearances = (): [\n  PlateAppearance[] | undefined,\n  boolean,\n  any,\n  (\n    playerId: string,\n    playType: \"pitching\" | \"batting\"\n  ) => Promise<PlateAppearance[]>\n] => {\n  const [PlateAppearances, setPlateAppearances] = useState<PlateAppearance[]>();\n  const { currentLeague } = useLeagueToggleContext();\n  const { get, response, loading, error } = useSwing420Api<PlateAppearance[]>();\n\n  const fetchPlateAppearances = useCallback(\n    async (playerId: string, playType: \"pitching\" | \"batting\") => {\n      const fetchedPlateAppearances = (await get(\n        `plateappearances/${playType}/${currentLeague}/${playerId}`\n      )) as PlateAppearance[];\n\n      if (response.ok) {\n        setPlateAppearances(fetchedPlateAppearances);\n      }\n\n      return fetchedPlateAppearances;\n    },\n    [get, setPlateAppearances, currentLeague, response]\n  );\n\n  return [PlateAppearances, loading, error, fetchPlateAppearances];\n};\n","import useFetch from \"use-http\";\n\nexport const useSwing420Api = <T,>() => {\n  return useFetch<T>(`https://swing420.com/api`);\n};\n","import React, { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport {\n  Container,\n  Content,\n  FlexboxGrid,\n  Header,\n  Input,\n  Loader,\n  Nav,\n  Toggle\n} from \"rsuite\";\nimport { useLeagueToggleContext } from \"../../../context/LeagueToggleContext/leagueToggleContext\";\nimport { HeatMap } from \"../../heatMap/heatMap\";\nimport { PlayGraph } from \"../../playGraph/playGraph\";\nimport { useGetPlateAppearances } from \"../../../hooks/useGetPlateAppearances/useGetPlateAppearances\";\n\ninterface PlayerPageParams {\n  playerId?: string;\n  playType?: \"pitching\" | \"batting\";\n}\n\nexport const PlayerPage: React.FC = () => {\n  const { playerId, playType } = useParams<PlayerPageParams>();\n  const [selectedTab, setSelectedTab] = useState(0);\n  const [currentPlayerId, setCurrentPlayerId] = useState(playerId ?? \"\");\n  const [selectedSeason, setSelectedSeason] = useState(\"7\");\n\n  // const [player, loadingPlayer, , fetchPlayerStats] = useGetPlayerStats();\n  const [\n    plateAppearances,\n    loadingPlateAppearances,\n    ,\n    fetchPlateAppearances\n  ] = useGetPlateAppearances();\n\n  const { currentLeague, setCurrentLeague } = useLeagueToggleContext();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    if (playerId && playType) {\n      // fetchPlayerStats(playerId);\n      fetchPlateAppearances(playerId, playType);\n    }\n  }, [playerId, playType, currentLeague, fetchPlateAppearances]);\n\n  const filteredPlateAppearances = useMemo(() => {\n    if (plateAppearances) {\n      if (selectedSeason === \"All\") {\n        return plateAppearances;\n      } else {\n        return plateAppearances.filter(\n          p => p.season.toString() === selectedSeason\n        );\n      }\n    }\n\n    return [];\n  }, [plateAppearances, selectedSeason]);\n\n  console.log(selectedSeason);\n  console.log(filteredPlateAppearances);\n\n  const timeout = useRef<number>(-1);\n  // const setCurrentPlayer = useCallback(\n  //   (newPlayerId: string) => {\n\n  //   },\n  //   [setCurrentPlayerId]\n  // );\n\n  useEffect(() => {\n    window.clearTimeout(timeout.current);\n    timeout.current = window.setTimeout(async () => {\n      history.replace(\n        `/${currentLeague}/player/${\n          !playType ? \"pitching\" : playType\n        }/${currentPlayerId}`\n      );\n    }, 300);\n  }, [history, currentPlayerId, currentLeague, playType]);\n\n  return (\n    <Container style={{ height: \"100%\" }}>\n      <Header>\n        <FlexboxGrid justify=\"space-between\" style={{ padding: 4 }}>\n          <FlexboxGrid align=\"middle\" justify=\"start\" style={{ width: \"50%\" }}>\n            <FlexboxGrid.Item>\n              <Toggle\n                size=\"md\"\n                checked={currentLeague === \"milr\"}\n                onChange={(checked: boolean) => {\n                  console.log(\"checked\", checked);\n                  setCurrentLeague(checked ? \"milr\" : \"mlr\");\n                }}\n                checkedChildren=\"MiLR\"\n                unCheckedChildren=\"MiLR\"\n              />\n            </FlexboxGrid.Item>\n\n            <FlexboxGrid.Item style={{ marginLeft: 8 }}>\n              <Toggle\n                size=\"md\"\n                checked={playType === \"pitching\" || !playType}\n                onChange={(checked: boolean) => {\n                  history.replace(\n                    `/${currentLeague}/player/${\n                      checked ? \"pitching\" : \"batting\"\n                    }/${currentPlayerId}`\n                  );\n                }}\n                checkedChildren=\"Pitching\"\n                unCheckedChildren=\"Batting\"\n              />\n            </FlexboxGrid.Item>\n\n            {/* <FlexboxGrid.Item style={{ marginLeft: 12, width: 300 }}>\n              <PlayerSearchBar setSelectedPlayer={setCurrentPlayer} />\n            </FlexboxGrid.Item> */}\n          </FlexboxGrid>\n\n          <FlexboxGrid justify=\"end\" align=\"middle\" style={{ width: \"50%\" }}>\n            <FlexboxGrid.Item style={{ marginRight: 12, width: 150 }}>\n              <Input\n                value={currentPlayerId}\n                onChange={setCurrentPlayerId}\n                placeholder={playerId ?? \"Enter Player Id\"}\n              />\n            </FlexboxGrid.Item>\n            Season:\n            <FlexboxGrid.Item colspan={3} style={{ marginLeft: 4 }}>\n              <Select\n                value={{\n                  label: selectedSeason,\n                  value: selectedSeason\n                }}\n                styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n                menuPortalTarget={document.body}\n                onChange={(season: any) => {\n                  setSelectedSeason(season.value);\n                }}\n                options={[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"All\"].map(s => ({\n                  label: s,\n                  value: s\n                }))}\n              />\n            </FlexboxGrid.Item>\n            {/* <FlexboxGrid colspan={5} justify=\"end\" style={{ marginLeft: 16 }}>\n              <Link to={`/${currentLeague}/game`}>{\"⬅️ Back to Games\"}</Link>\n            </FlexboxGrid> */}\n          </FlexboxGrid>\n        </FlexboxGrid>\n      </Header>\n\n      <Content style={{ height: \"100%\" }}>\n        <FlexboxGrid\n          justify=\"center\"\n          align=\"middle\"\n          style={{ height: \"100%\", width: \"100%\" }}\n        >\n          {playerId && playType ? (\n            <>\n              {loadingPlateAppearances ? (\n                <Loader size=\"lg\" />\n              ) : (\n                <>\n                  {/* {player && (\n                    <PlayerStats player={player} statType={playType} />\n                  )} */}\n                  <FlexboxGrid style={{ width: \"100%\" }}>\n                    <Nav\n                      appearance={\"tabs\"}\n                      activeKey={selectedTab}\n                      onSelect={(e: any) => {\n                        setSelectedTab(e);\n                      }}\n                    >\n                      <Nav.Item eventKey={0}>Chart</Nav.Item>\n                      <Nav.Item eventKey={1}>Heat map</Nav.Item>\n                    </Nav>\n                  </FlexboxGrid>\n\n                  <FlexboxGrid.Item style={{ height: \"100%\", width: \"100%\" }}>\n                    {filteredPlateAppearances.length > 0 ? (\n                      selectedTab === 0 ? (\n                        <PlayGraph\n                          plateAppearances={filteredPlateAppearances}\n                          zoom={true}\n                        />\n                      ) : (\n                        <HeatMap plateAppearances={filteredPlateAppearances} />\n                      )\n                    ) : (\n                      <FlexboxGrid\n                        justify=\"center\"\n                        align=\"middle\"\n                        style={{ height: \"100%\", width: \"100%\" }}\n                      >\n                        No plays available\n                      </FlexboxGrid>\n                    )}\n                  </FlexboxGrid.Item>\n                </>\n              )}\n            </>\n          ) : (\n            \"Search for a player...\"\n          )}\n        </FlexboxGrid>\n      </Content>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  useRouteMatch\n} from \"react-router-dom\";\nimport { LeagueToggleContextProvider } from \"../../context/LeagueToggleContext/leagueToggleContext\";\nimport { GamePage } from \"../pages/gamePage/gamePage\";\nimport { PlayerPage } from \"../pages/playerPage/playerPage\";\n\nexport const Routes: React.FC = () => {\n  return (\n    <Router>\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/mlr\" />\n        <Route path=\"/:currentLeague\">\n          <LeagueToggleContextProvider>\n            <Pages />\n          </LeagueToggleContextProvider>\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nconst Pages = () => {\n  const { path } = useRouteMatch();\n\n  return (\n    <Switch>\n      <Redirect exact from={path} to={`${path}/game`} />\n      <Route path={`${path}/game`}>\n        <GamePage />\n      </Route>\n      <Route path={`${path}/player/:playType?/:playerId?`}>\n        <PlayerPage />\n      </Route>\n    </Switch>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Routes } from \"../routes/Routes\";\n\nimport \"rsuite/dist/styles/rsuite-default.css\";\n\nexport const App: React.FC = () => {\n  return (\n    <div style={{ height: \"100vh\", width: \"100vw\" }}>\n      <Routes />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/app/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}